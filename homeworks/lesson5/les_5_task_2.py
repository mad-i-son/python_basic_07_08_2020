"""
2. Написать программу сложения и умножения двух шестнадцатеричных чисел.
 При этом каждое число представляется как массив, элементы которого — цифры числа.
Например, пользователь ввёл A2 и C4F. Нужно сохранить их как [‘A’, ‘2’]
и [‘C’, ‘4’, ‘F’] соответственно. Сумма чисел из примера: [‘C’, ‘F’, ‘1’],
 произведение - [‘7’, ‘C’, ‘9’, ‘F’, ‘E’].
"""
user_dict = {}
sixteen_dict = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4,
                5: 5, 6: 6, 7: 7, 8: 8, 9: 9,
                'A': 10, 'B': 11, 'C': 12, 'D': 13,
                'E': 14, 'F': 15, 16: 10}
print(sixteen_dict)

while True:
    var_list = []
    sixteen_number = input('Введите шестнадцатеричное число: ')
    var_list = [var for var in sixteen_number]

    user_dict[sixteen_number] = var_list
    user_answer = input('Если это всё введите Y если нет N: ')
    if user_answer == 'Y':
        break

print(user_dict)

"""
Дальше должна быть реализация этой идеи но так как тут просто надо прочитать значения в массиве наобарот, сохранить
в случае лишних десятков и свериться со словарем оставим в виде комментариев. С умножением всё аналогично.

# Переходим собственно к примеру на сложение. Давайте сложим 0xA2 и 0xC4F.
# 
# A2+C4F
# Сначала складываем единицы — 2 + F. Вспоминаем, что F = 15, получаем 2 + 15 = 17.
# Результат больше основания системы счисления, который равен 16. Значит вычитаем 16 из 17 — равно 1,
# записываем этот новый результат под правым разрядом, а в левый старший разряд переносим единичку
# (16 единиц равно одному десятку в шестнадцатеричной системе). Там же складываем A + 4.
# Добавляем к этой сумме 1 перенесенный разряд и вспоминаем, что A = 10, получаем: 10 + 4 + 1 = 15.
# Во-первых: этот результат меньше 16, значит его можно просто записать под складываемыми цифрами,
# а во-вторых: Число 15 в шестнадцатеричной арифметике записывается буквой F.
# В разряд сотен при этом ничего не переносится, а цифра C из верхнего слагаемого просто переносится в результат.
# Несложно заметить, что 0xA2 + 0xC4F = 0xCF1.

"""