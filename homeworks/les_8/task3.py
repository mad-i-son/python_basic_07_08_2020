"""
3. Создайте собственный класс-исключение, который должен проверять содержимое
 списка на наличие только чисел. Проверить работу исключения на реальном примере.
  Необходимо запрашивать у пользователя данные и заполнять список. Класс-исключение
   должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно, пока
 пользователь сам не остановит работу скрипта, введя, например, команду “stop”.
 При этом скрипт завершается, сформированный список выводится на экран.
Подсказка: для данного задания примем, что пользователь может вводить только числа
 и строки. При вводе пользователем очередного элемента необходимо реализовать
  проверку типа элемента и вносить его в список, только если введено число.
  Класс-исключение должен не позволить пользователю ввести текст (не число)
  и отобразить соответствующее сообщение. При этом работа скрипта не должна завершаться.
"""


class Number(Exception):
    def __init__(self, txt):
        self.txt = txt

def input_output_number():

    user_list = []
    while True:

        user_var = input('Введите число (для остановки введите stop): ')
        try:
            if isinstance(float(user_var), float):
                user_list.append(float(user_var))
                print(user_list)
        except ValueError:
            if user_var == 'stop':
                break
            else:
                print("Вы ввели не число")
        except Number as err:
            print(err)

input_output_number()
